plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.48'
}

version = mod_version
group = 'xfacthd.framedblocks'

base {
    archivesName = 'FramedBlocks'
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

jarJar.enable()

minecraft.accessTransformers.file project.file('src/main/resources/META-INF/accesstransformer.cfg')

configurations {
    nonModLibrary {}
    implementation.extendsFrom(nonModLibrary)
}

runs {
    configureEach {
        // systemProperty  'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
        systemProperty  'forge.logging.console.level', 'debug'
        systemProperty  'forge.enabledGameTestNamespaces', 'framedblocks'

        dependencies {
            runtime configuration(project.configurations.nonModLibrary)
        }

        modSources.addAll project.sourceSets.main, project.sourceSets.test
    }

    client {
        workingDirectory project.file('run')
    }

    server {
        workingDirectory project.file('run_server')
    }

    data {
        workingDirectory project.file('run')

        programArguments.addAll '--mod', 'framedblocks', '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }

    gameTestServer {
        workingDirectory project.file('run_gametest')
    }
}

sourceSets {
    main.resources {
        srcDir 'src/generated/resources'
    }

    test {
        java {
            srcDir "src/test/java"
        }
        resources {
            srcDir "src/test/resources"
        }
    }
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url = "https://maven.tterrag.com/"
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "Shedaniel's maven"
        url = "https://maven.shedaniel.me/"
    }
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation("net.neoforged:neoforge:${neoforge_version}")

    //compileOnly("team.chisel.ctm:CTM:1.20.1-1.1.8+4")

    // Only needed when Diagonal Fences or Diagonal Windows is switched to implementation
    //runtimeOnly("curse.maven:puzzleslib-495476:4621178")
    //compileOnly("curse.maven:diagonalfences-458048:4611775")
    //compileOnly("curse.maven:diagonalwindows-891328:4660584")

    //compileOnly("curse.maven:buildinggadgets-298187:3829297")

    runtimeOnly("xfacthd.contex:ConnectedTextures:3.0:slim") { transitive = false }

    implementation("curse.maven:athena-841890:4884962")
    //runtimeOnly("curse.maven:resfullib-570073:4681831")
    //runtimeOnly("curse.maven:chipped-456956:4634856")

    //compileOnly("curse.maven:xycraft_core-653786:4788862")
    //compileOnly("curse.maven:xycraft_world-653789:4788863")

    //compileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    //compileOnly("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    //runtimeOnly("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")

    // Switch Arch, Cloth and REI-forge to impl for runtime testing
    compileOnly("dev.architectury:architectury-neoforge:${arch_version}")
    compileOnly("me.shedaniel.cloth:cloth-config-neoforge:${cloth_version}")
    compileOnly("me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}")
    //runtimeOnly("curse.maven:reipc-521393:4723408")
    compileOnly("me.shedaniel:RoughlyEnoughItems-api-neoforge:${rei_version}")
    compileOnly("me.shedaniel:RoughlyEnoughItems-default-plugin-neoforge:${rei_version}")
    //compileOnly("me.shedaniel:REIPluginCompatibilities-forge-annotations:${reipcanno_version}")

    //compileOnly("dev.emi:emi-forge:${emi_version}+${minecraft_version}:api")
    //runtimeOnly("dev.emi:emi-forge:${emi_version}+${minecraft_version}")

    //runtimeOnly("curse.maven:spark-361579:3767286")

    //compileOnly("curse.maven:modernfix-790626:4771907")
    //runtimeOnly("curse.maven:rubidium-574856:4684247")
    //runtimeOnly("curse.maven:oculus-581495:4578741")
    //runtimeOnly("curse.maven:starlight-forge-526854:4631193")

    //compileOnly("com.simibubi.create:create-1.20.1:0.5.1.d-11:slim") { transitive = false }
    //compileOnly("com.jozufozu.flywheel:flywheel-forge-1.20.1:0.6.9-5")
    // Only needed when Create and/or Flywheel are switched to implementation
    //runtimeOnly("com.tterrag.registrate:Registrate:MC1.20-1.3.3")

    //compileOnly("curse.maven:moonlight-499980:4621773")
    //compileOnly("curse.maven:supplementaries-412082:4622527")

    //compileOnly("curse.maven:nocubes-309664:3944569")

    //implementation("curse.maven:guidebook-253874:4593765")

    compileOnly("curse.maven:atlasviewer-633577:4882515")

    nonModLibrary(group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.1.1')
    jarJar(group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '[3.1.1,4.0.0)') {
        transitive(false)
    }
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version: minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neoforge_version: neoforge_version,
            neoforge_version_range: neoforge_version_range,
            loader_version_range: loader_version_range,
            mod_version: mod_version,
            rei_version: rei_version
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

processTestResources {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
}

tasks.jarJar.configure {
    archiveClassifier = ''
}

tasks.named('jar', Jar).configure {
    archiveClassifier = 'slim'
}

publishing {
    publications {
        register ('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
